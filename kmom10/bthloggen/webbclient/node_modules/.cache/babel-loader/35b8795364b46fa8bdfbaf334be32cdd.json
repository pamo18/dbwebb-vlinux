{"ast":null,"code":"var _jsxFileName = \"/Users/office/Documents/dbwebb-kurser/vlinux/me/kmom10/bthloggen/webbclient/src/components/page/data.js\";\n\n/*eslint max-len: [\"error\", { \"code\": 150 }]*/\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport base from '../../config/api.js';\nlet api = base.api();\n\nclass Data extends Component {\n  constructor(props) {\n    super(props);\n    this.getContent = this.getContent.bind(this);\n    this.state = {\n      type: this.props.type,\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.getContent(this.props.type);\n  }\n\n  getContent(type) {\n    let that = this;\n    let filter;\n\n    switch (type) {\n      case \"all\":\n        filter = \"/data/\";\n        break;\n\n      case \"ip\":\n        filter = \"/data?ip=\";\n        break;\n\n      case \"url\":\n        filter = \"/data?url=\";\n        break;\n\n      default:\n        this.setState({\n          data: [React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \"Start\")]\n        });\n    }\n\n    if (filter) {\n      let data = this.state.res || null;\n      let result = [];\n\n      if (!data) {\n        fetch(api + filter).then(res => res.json()).then(function (res) {\n          that.setState({\n            res: res\n          });\n\n          for (let i = 0; i <= 20; i++) {\n            result.push(React.createElement(\"tr\", {\n              key: res[i].ip,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              width: \"20%\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67\n              },\n              __self: this\n            }, res[i].ip), React.createElement(\"td\", {\n              width: \"40%\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68\n              },\n              __self: this\n            }, res[i].url), React.createElement(\"td\", {\n              width: \"20%\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69\n              },\n              __self: this\n            }, res[i].day + \" \" + res[i].month + \" \" + res[i].year), React.createElement(\"td\", {\n              width: \"20%\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }, res[i].time)));\n          }\n\n          ;\n          return true;\n        }).then(() => that.setState({\n          data: [React.createElement(\"table\", {\n            className: \"fixed-table\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, \"IP\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, \"URL\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, \"Date\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, \"Time\")), result)]\n        }));\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.data[0]);\n  }\n\n}\n\nData.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\nexport default Data;","map":{"version":3,"sources":["/Users/office/Documents/dbwebb-kurser/vlinux/me/kmom10/bthloggen/webbclient/src/components/page/data.js"],"names":["React","Component","NavLink","PropTypes","base","api","Data","constructor","props","getContent","bind","state","type","data","componentDidMount","that","filter","setState","res","result","fetch","then","json","i","push","ip","url","day","month","year","time","render","propTypes","match","object","isRequired","location","history"],"mappings":"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","sourcesContent":["/*eslint max-len: [\"error\", { \"code\": 150 }]*/\n\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport base from '../../config/api.js';\nlet api = base.api();\n\n\nclass Data extends Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n        this.state = {\n            type: this.props.type,\n            data: []\n        };\n    }\n\n    componentDidMount() {\n        this.getContent(this.props.type);\n    }\n\n    getContent(type) {\n        let that = this;\n        let filter;\n\n        switch (type) {\n            case \"all\":\n                filter = \"/data/\";\n                break;\n\n            case \"ip\":\n                filter = \"/data?ip=\";\n                break;\n\n            case \"url\":\n                filter = \"/data?url=\";\n                break;\n\n            default:\n                this.setState({\n                    data: [\n                        <p>Start</p>\n                    ]\n                });\n        }\n\n        if (filter) {\n            let data = this.state.res || null;\n            let result = [];\n            if (!data) {\n                fetch(api + filter)\n                    .then(res => res.json())\n                    .then(function (res) {\n                        that.setState({\n                            res: res\n                        });\n                        for (let i = 0; i <= 20; i++) {\n                            result.push(\n                                <tr key={res[i].ip}>\n                                    <td width=\"20%\">{ res[i].ip }</td>\n                                    <td width=\"40%\">{ res[i].url }</td>\n                                    <td width=\"20%\">{ res[i].day + \" \" + res[i].month + \" \" + res[i].year }</td>\n                                    <td width=\"20%\">{ res[i].time }</td>\n                                </tr>\n                            )\n                        };\n                        return true;\n                    })\n                    .then(() => that.setState({\n                        data: [\n                            <table className=\"fixed-table\">\n                                <tr>\n                                    <th>IP</th>\n                                    <th>URL</th>\n                                    <th>Date</th>\n                                    <th>Time</th>\n                                </tr>\n                                { result }\n                            </table>\n                        ]\n                    }))\n                }\n        }\n\n\n    }\n    render() {\n        return (\n            <article>\n                { this.state.data[0] }\n            </article>\n        );\n    }\n}\n\nexport default Data;\n"]},"metadata":{},"sourceType":"module"}