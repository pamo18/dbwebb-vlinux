{"ast":null,"code":"var _jsxFileName = \"/Users/office/Documents/dbwebb-kurser/vlinux/me/kmom10/bthloggen/webbclient/src/components/page/data.js\";\n\n/*eslint max-len: [\"error\", { \"code\": 200 }]*/\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport base from '../../config/api.js';\nlet api = base.api();\n\nclass Data extends Component {\n  constructor(props) {\n    super(props);\n    this.getContent = this.getContent.bind(this);\n    this.setPaginate = this.setPaginate.bind(this);\n    this.setCurrent = this.setCurrent.bind(this);\n    this.setFilter = this.setFilter.bind(this);\n    this.getSearch = this.getSearch.bind(this);\n    this.state = {\n      type: this.props.type,\n      data: [],\n      search: [],\n      showing: false,\n      pagination: [],\n      filter1: \"\",\n      filter2: \"\",\n      current: 1,\n      page: 1000\n    };\n  }\n\n  componentDidMount() {\n    this.getContent(this.props.type, this.state.current, this.state.page);\n  }\n\n  setPaginate(length) {\n    let pageCount = Math.ceil(length / this.state.page);\n    let pagination = [];\n\n    for (let i = 1; i <= pageCount; i++) {\n      let link = \"#\";\n      pagination.push(React.createElement(\"a\", {\n        href: link,\n        className: \"paginate\",\n        onClick: () => this.setCurrent(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, i));\n    }\n\n    this.setState({\n      pagination: pagination\n    });\n  }\n\n  setCurrent(current) {\n    this.setState({\n      current: current\n    }, () => this.getContent(this.state.type, this.state.current, this.state.page));\n  }\n\n  setFilter1(e) {\n    this.setState({\n      filter1: e.target.value\n    }, () => this.getContent(this.state.type, this.state.current, this.state.page));\n  }\n\n  setFilter2(e) {\n    this.setState({\n      filter2: e.target.value\n    }, () => this.getContent(this.state.type, this.state.current, this.state.page));\n  }\n\n  getSearch(toggle) {\n    this.setState({\n      showing: toggle\n    });\n  }\n\n  getContent(type, current, page) {\n    let that = this;\n    let filter = this.state.filter;\n    let url;\n\n    switch (type) {\n      case \"all\":\n        url = \"/data/\";\n        this.getSearch(false);\n        break;\n\n      case \"ip\":\n        url = \"/data?ip=\" + filter;\n        this.getSearch(true);\n        break;\n\n      case \"url\":\n        url = \"/data?url=\" + filter;\n        this.getSearch(true);\n        break;\n\n      case \"day\":\n        url = \"/data?day=\" + filter;\n        this.getSearch(true);\n        break;\n\n      case \"month\":\n        url = \"/data?month=\" + filter;\n        this.getSearch(true);\n        break;\n\n      case \"time\":\n        url = \"/data?time=\" + filter;\n        this.getSearch(true);\n        break;\n\n      case \"day-time\":\n        url = \"/data?time=\" + filter;\n        this.getSearch(true, 2);\n        break;\n\n      default:\n        url = \"/data/\";\n        this.getSearch(false);\n    }\n\n    if (url && this.state.res) {\n      this.makeTable(this.state.res, current, page);\n    } else if (url) {\n      fetch(api + url).then(res => res.json()).then(res => this.makeTable(res, current, page));\n    }\n  }\n\n  makeTable(data, current, page) {\n    let result = [];\n    let start = current * page - page;\n    let stop = start + page - 1;\n    let dataCount = data.length;\n    this.setPaginate(dataCount);\n\n    for (let i = start; i <= stop; i++) {\n      if (i === dataCount) {\n        break;\n      } else {\n        result.push(React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          width: \"20%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, data[i].ip), React.createElement(\"td\", {\n          width: \"40%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, data[i].url), React.createElement(\"td\", {\n          width: \"20%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, data[i].day + \" \" + data[i].month + \" \" + data[i].year), React.createElement(\"td\", {\n          width: \"20%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, data[i].time)));\n      }\n    }\n\n    this.setState({\n      data: [React.createElement(\"table\", {\n        className: \"fixed-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"IP\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"URL\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Time\")), result)]\n    });\n  }\n\n  render() {\n    const showing = this.state.showing;\n    return React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, showing ? React.createElement(\"h2\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, ([\"url\", \"ip\"].includes(this.state.type) ? \"Filter \" : \"Search \") + this.state.type, React.createElement(\"input\", {\n      className: \"form-input\",\n      type: \"text\",\n      name: \"filter1\",\n      placeholder: this.state.type,\n      value: this.state.filter1,\n      onChange: this.setFilter1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), showing2 ? React.createElement(\"input\", {\n      className: \"form-input\",\n      type: \"text\",\n      name: \"filter2\",\n      placeholder: this.state.type,\n      value: this.state.filter2,\n      onChange: this.setFilter2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }) : null) : null, this.state.pagination, this.state.data);\n  }\n\n}\n\nData.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\nexport default Data;","map":{"version":3,"sources":["/Users/office/Documents/dbwebb-kurser/vlinux/me/kmom10/bthloggen/webbclient/src/components/page/data.js"],"names":["React","Component","NavLink","PropTypes","base","api","Data","constructor","props","getContent","bind","setPaginate","setCurrent","setFilter","getSearch","state","type","data","search","showing","pagination","filter1","filter2","current","page","componentDidMount","length","pageCount","Math","ceil","i","link","push","setState","setFilter1","e","target","value","setFilter2","toggle","that","filter","url","res","makeTable","fetch","then","json","result","start","stop","dataCount","ip","day","month","year","time","render","includes","showing2","propTypes","match","object","isRequired","location","history"],"mappings":"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","sourcesContent":["/*eslint max-len: [\"error\", { \"code\": 200 }]*/\n\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport base from '../../config/api.js';\nlet api = base.api();\n\n\nclass Data extends Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n        this.setPaginate = this.setPaginate.bind(this);\n        this.setCurrent = this.setCurrent.bind(this);\n        this.setFilter = this.setFilter.bind(this);\n        this.getSearch = this.getSearch.bind(this);\n        this.state = {\n            type: this.props.type,\n            data: [],\n            search: [],\n            showing: false,\n            pagination: [],\n            filter1: \"\",\n            filter2: \"\",\n            current: 1,\n            page: 1000\n        };\n    }\n\n    componentDidMount() {\n        this.getContent(this.props.type, this.state.current, this.state.page);\n    }\n\n    setPaginate(length) {\n        let pageCount = Math.ceil(length / this.state.page);\n        let pagination = [];\n\n        for (let i = 1; i <= pageCount; i++) {\n            let link = \"#\";\n            pagination.push(\n                <a href={link} className=\"paginate\" onClick={() => this.setCurrent(i)}>{i}</a>\n            )\n        }\n\n        this.setState({\n            pagination: pagination\n        });\n    }\n\n    setCurrent(current) {\n        this.setState({\n            current: current\n        }, () => this.getContent(this.state.type, this.state.current, this.state.page));\n    }\n\n    setFilter1(e) {\n        this.setState({\n            filter1: e.target.value\n        }, () => this.getContent(this.state.type, this.state.current, this.state.page));\n    }\n\n    setFilter2(e) {\n        this.setState({\n            filter2: e.target.value\n        }, () => this.getContent(this.state.type, this.state.current, this.state.page));\n    }\n\n    getSearch(toggle) {\n        this.setState({\n            showing: toggle\n        });\n    }\n\n    getContent(type, current, page) {\n        let that = this;\n        let filter = this.state.filter;\n        let url;\n\n        switch (type) {\n            case \"all\":\n                url = \"/data/\";\n                this.getSearch(false);\n                break;\n\n            case \"ip\":\n                url = \"/data?ip=\" + filter;\n                this.getSearch(true);\n                break;\n\n            case \"url\":\n                url = \"/data?url=\" + filter;\n                this.getSearch(true);\n                break;\n\n            case \"day\":\n                url = \"/data?day=\" + filter;\n                this.getSearch(true);\n                break;\n\n            case \"month\":\n                url = \"/data?month=\" + filter;\n                this.getSearch(true);\n                break;\n\n            case \"time\":\n                url = \"/data?time=\" + filter;\n                this.getSearch(true);\n                break;\n\n            case \"day-time\":\n                url = \"/data?time=\" + filter;\n                this.getSearch(true, 2);\n                break;\n\n            default:\n                url = \"/data/\";\n                this.getSearch(false);\n        }\n\n        if (url && this.state.res) {\n            this.makeTable(this.state.res, current, page)\n        } else if (url) {\n            fetch(api + url)\n                .then(res => res.json())\n                .then(res => this.makeTable(res, current, page));\n        }\n    }\n\n    makeTable(data, current, page) {\n        let result = [];\n        let start = (current * page) - page;\n        let stop = (start + page) - 1;\n        let dataCount = data.length;\n\n        this.setPaginate(dataCount);\n\n        for (let i = start; i <= stop; i++) {\n            if (i === dataCount) {\n                break;\n            } else {\n                result.push(\n                    <tr key={i}>\n                        <td width=\"20%\">{ data[i].ip }</td>\n                        <td width=\"40%\">{ data[i].url }</td>\n                        <td width=\"20%\">{ data[i].day + \" \" + data[i].month + \" \" + data[i].year }</td>\n                        <td width=\"20%\">{ data[i].time }</td>\n                    </tr>\n                )\n            }\n        }\n\n        this.setState({\n            data: [\n                <table className=\"fixed-table\">\n                    <tr>\n                        <th>IP</th>\n                        <th>URL</th>\n                        <th>Date</th>\n                        <th>Time</th>\n                    </tr>\n                    { result }\n                </table>\n            ]\n        });\n    }\n\n    render() {\n        const { showing } = this.state;\n        return (\n            <article>\n                { showing\n                    ? <h2 className=\"center\">{([\"url\", \"ip\"].includes(this.state.type) ? \"Filter \" : \"Search \") + this.state.type}\n                        <input\n                            className=\"form-input\"\n                            type=\"text\"\n                            name=\"filter1\"\n                            placeholder={this.state.type}\n                            value={this.state.filter1}\n                            onChange={this.setFilter1}\n                        />\n                        { showing2\n                            ?   <input\n                                    className=\"form-input\"\n                                    type=\"text\"\n                                    name=\"filter2\"\n                                    placeholder={this.state.type}\n                                    value={this.state.filter2}\n                                    onChange={this.setFilter2}\n                                />\n                            :null\n                        }\n                    </h2>\n                    :null\n                }\n                { this.state.pagination }\n                { this.state.data }\n            </article>\n        );\n    }\n}\n\nexport default Data;\n"]},"metadata":{},"sourceType":"module"}