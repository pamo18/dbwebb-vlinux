{"ast":null,"code":"var _jsxFileName = \"/Users/office/Documents/dbwebb-kurser/vlinux/me/kmom10/bthloggen/webbclient/src/components/page/data.js\";\n\n/*eslint max-len: [\"error\", { \"code\": 150 }]*/\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport base from '../../config/api.js';\nlet api = base.api();\n\nclass Data extends Component {\n  constructor(props) {\n    super(props);\n    this.getContent = this.getContent.bind(this);\n    this.setPaginate = this.setPaginate.bind(this);\n    this.setCurrent = this.setCurrent.bind(this);\n    this.state = {\n      type: this.props.type,\n      data: [],\n      search: [],\n      pagination: [],\n      filter: \"\",\n      current: 1,\n      page: 1000\n    };\n  }\n\n  componentDidMount() {\n    this.getContent(this.props.type, this.state.current, this.state.page);\n  }\n\n  setPaginate(length) {\n    let pageCount = Math.ceil(length / this.state.page);\n    let pagination = [];\n\n    for (let i = 1; i <= pageCount; i++) {\n      let link = \"#\";\n      pagination.push(React.createElement(\"a\", {\n        href: link,\n        className: \"paginate\",\n        onClick: () => this.setCurrent(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, i));\n    }\n\n    this.setState({\n      pagination: pagination\n    });\n  }\n\n  setCurrent(current) {\n    this.setState({\n      current: current\n    }, () => this.getContent(this.state.type, this.state.current, this.state.page));\n  }\n\n  getContent(type, current, page) {\n    let that = this;\n    let filter = this.state.filter;\n    let url;\n\n    switch (type) {\n      case \"all\":\n        url = \"/data/\";\n        break;\n\n      case \"ip\":\n        url = \"/data?ip=\" + filter;\n        break;\n\n      case \"url\":\n        url = \"/data?url=\" + filter;\n        break;\n\n      default:\n        this.setState({\n          data: [React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, \"Start\")]\n        });\n    }\n\n    if (url && this.state.res) {\n      this.makeTable(this.state.res, current, page);\n    } else if (url) {\n      fetch(api + url).then(res => res.json()).then(res => this.makeTable(res, current, page));\n    }\n  }\n\n  makeTable(data, current, page) {\n    let result = [];\n    let start = current * page - page;\n    let stop = start + page - 1;\n    let dataCount = data.length;\n    this.setPaginate(dataCount);\n\n    for (let i = start; i <= stop; i++) {\n      if (i === dataCount) {\n        break;\n      } else {\n        result.push(React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          width: \"20%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, data[i].ip), React.createElement(\"td\", {\n          width: \"40%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, data[i].url), React.createElement(\"td\", {\n          width: \"20%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, data[i].day + \" \" + data[i].month + \" \" + data[i].year), React.createElement(\"td\", {\n          width: \"20%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, data[i].time)));\n      }\n    }\n\n    this.setState({\n      data: [React.createElement(\"table\", {\n        className: \"fixed-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"IP\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"URL\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Time\")), result)]\n    });\n  }\n\n  render() {\n    return React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.state.pagination, this.state.search, this.state.data);\n  }\n\n}\n\nData.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\nexport default Data;","map":{"version":3,"sources":["/Users/office/Documents/dbwebb-kurser/vlinux/me/kmom10/bthloggen/webbclient/src/components/page/data.js"],"names":["React","Component","NavLink","PropTypes","base","api","Data","constructor","props","getContent","bind","setPaginate","setCurrent","state","type","data","search","pagination","filter","current","page","componentDidMount","length","pageCount","Math","ceil","i","link","push","setState","that","url","res","makeTable","fetch","then","json","result","start","stop","dataCount","ip","day","month","year","time","render","propTypes","match","object","isRequired","location","history"],"mappings":"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","sourcesContent":["/*eslint max-len: [\"error\", { \"code\": 150 }]*/\n\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport base from '../../config/api.js';\nlet api = base.api();\n\n\nclass Data extends Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n        this.setPaginate = this.setPaginate.bind(this);\n        this.setCurrent = this.setCurrent.bind(this);\n        this.state = {\n            type: this.props.type,\n            data: [],\n            search: [],\n            pagination: [],\n            filter: \"\",\n            current: 1,\n            page: 1000\n        };\n    }\n\n    componentDidMount() {\n        this.getContent(this.props.type, this.state.current, this.state.page);\n    }\n\n    setPaginate(length) {\n        let pageCount = Math.ceil(length / this.state.page);\n        let pagination = [];\n\n        for (let i = 1; i <= pageCount; i++) {\n            let link = \"#\";\n            pagination.push(\n                <a href={link} className=\"paginate\" onClick={() => this.setCurrent(i)}>{i}</a>\n            )\n        }\n\n        this.setState({\n            pagination: pagination\n        });\n    }\n\n    setCurrent(current) {\n        this.setState({\n            current: current\n        }, () => this.getContent(this.state.type, this.state.current, this.state.page));\n    }\n\n    getContent(type, current, page) {\n        let that = this;\n        let filter = this.state.filter;\n        let url;\n\n        switch (type) {\n            case \"all\":\n                url = \"/data/\";\n                break;\n\n            case \"ip\":\n                url = \"/data?ip=\" + filter;\n                break;\n\n            case \"url\":\n                url = \"/data?url=\" + filter;\n                break;\n\n            default:\n                this.setState({\n                    data: [\n                        <p>Start</p>\n                    ]\n                });\n        }\n        if (url && this.state.res) {\n            this.makeTable(this.state.res, current, page)\n        } else if (url) {\n            fetch(api + url)\n                .then(res => res.json())\n                .then(res => this.makeTable(res, current, page));\n        }\n    }\n\n    makeTable(data, current, page) {\n        let result = [];\n        let start = (current * page) - page;\n        let stop = (start + page) - 1;\n        let dataCount = data.length;\n\n        this.setPaginate(dataCount);\n\n        for (let i = start; i <= stop; i++) {\n            if (i === dataCount) {\n                break;\n            } else {\n                result.push(\n                    <tr key={i}>\n                        <td width=\"20%\">{ data[i].ip }</td>\n                        <td width=\"40%\">{ data[i].url }</td>\n                        <td width=\"20%\">{ data[i].day + \" \" + data[i].month + \" \" + data[i].year }</td>\n                        <td width=\"20%\">{ data[i].time }</td>\n                    </tr>\n                )\n            }\n        }\n\n        this.setState({\n            data: [\n                <table className=\"fixed-table\">\n                    <tr>\n                        <th>IP</th>\n                        <th>URL</th>\n                        <th>Date</th>\n                        <th>Time</th>\n                    </tr>\n                    { result }\n                </table>\n            ]\n        });\n    }\n\n    render() {\n        return (\n            <article>\n                { this.state.pagination }\n                { this.state.search }\n                { this.state.data }\n            </article>\n        );\n    }\n}\n\nexport default Data;\n"]},"metadata":{},"sourceType":"module"}