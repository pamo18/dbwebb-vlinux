{"ast":null,"code":"var _jsxFileName = \"/Users/office/Documents/dbwebb-kurser/vlinux/me/kmom10/bthloggen/webbclient/src/components/page/View.js\";\n\n/*eslint max-len: [\"error\", { \"code\": 150 }]*/\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport base from '../../config/api.js';\nlet api = base.api();\n\nclass View extends Component {\n  constructor(props) {\n    super(props);\n    this.getContent = this.getContent.bind(this);\n    this.state = {\n      type: this.props.match.params.type,\n      data: [],\n      title: \"All\"\n    };\n  }\n\n  componentDidMount() {\n    this.getContent();\n  }\n\n  getContent() {\n    let that = this;\n    let data = [];\n\n    if (this.state.type === \"start\") {\n      data = [React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Start\"))];\n    } else {\n      fetch(api + \"/data/\").then(res => res.json()).then(function (res) {\n        res.map(function (item) {\n          data.push(React.createElement(\"div\", {\n            key: item.ip,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, \"IP: \", item.ip), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, \"URL: \", item.url), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \"Date: \", item.day, \" \", item.month, \" \", item.year), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"Time: \", item.time)));\n        });\n        return true;\n      }).then(() => this.setState({\n        data: data\n      }));\n    }\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar_main under\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/view/all\",\n      activeClassName: \"selected\",\n      onClick: () => this.setState({\n        type: \"all\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"All\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.data[0]));\n  }\n\n}\n\nView.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\nexport default View;","map":{"version":3,"sources":["/Users/office/Documents/dbwebb-kurser/vlinux/me/kmom10/bthloggen/webbclient/src/components/page/View.js"],"names":["React","Component","NavLink","PropTypes","base","api","View","constructor","props","getContent","bind","state","type","match","params","data","title","componentDidMount","that","fetch","then","res","json","map","item","push","ip","url","day","month","year","time","setState","render","propTypes","object","isRequired","location","history"],"mappings":"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","sourcesContent":["/*eslint max-len: [\"error\", { \"code\": 150 }]*/\n\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport base from '../../config/api.js';\nlet api = base.api();\n\n\nclass View extends Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n        this.state = {\n            type: this.props.match.params.type,\n            data: [],\n            title: \"All\"\n        };\n    }\n\n    componentDidMount() {\n        this.getContent();\n    }\n\n    getContent() {\n        let that = this;\n        let data = [];\n\n        if (this.state.type === \"start\") {\n            data = [\n                <div>\n                    <p>Start</p>\n                </div>\n            ]\n        } else {\n            fetch(api + `/data/`)\n                .then(res => res.json())\n                .then(function (res) {\n                    res.map(function (item) {\n                        data.push(\n                            <div key={item.ip}>\n                                <p>IP: { item.ip }</p>\n                                <p>URL: { item.url }</p>\n                                <p>Date: { item.day } { item.month } { item.year }</p>\n                                <p>Time: { item.time }</p>\n                            </div>\n                        )\n                    });\n                    return true;\n                })\n                .then(() => this.setState({\n                    data: data\n                }))\n        }\n    }\n    render() {\n        return (\n            <main>\n                <nav className=\"navbar_main under\">\n                    <ul>\n                        <li><NavLink to=\"/view/all\" activeClassName=\"selected\" onClick={() =>this.setState({type: \"all\"})}>All</NavLink></li>\n                    </ul>\n                </nav>\n                <div>\n                    { this.state.data[0] }\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default View;\n"]},"metadata":{},"sourceType":"module"}