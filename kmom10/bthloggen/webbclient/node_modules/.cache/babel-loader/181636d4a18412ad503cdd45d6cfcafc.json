{"ast":null,"code":"const utils = {\n  passwordChecker: function (password) {\n    let strength = 0;\n\n    if (password.length >= 4 && password.length <= 6) {\n      strength += 1;\n    } else if (password.length >= 7 && password.length <= 9) {\n      strength += 2;\n    } else if (password.length >= 10) {\n      strength += 4;\n    }\n\n    if (password.match(/[A-Z]/)) {\n      strength += 3;\n    }\n\n    if (password.match(/[0-9]/)) {\n      strength += 3;\n    }\n\n    return strength;\n  },\n  getMonthSetup: function (year, month) {\n    let first = new Date(year, month, 1),\n        last = new Date(year, month + 1, 0);\n    var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    let currentMonth = {\n      start: days[first.getDay()],\n      end: last.getDate()\n    };\n    return currentMonth;\n  },\n  getDayPos: function (day) {\n    let startPos = {\n      \"Mon\": 0,\n      \"Tue\": 1,\n      \"Wed\": 2,\n      \"Thu\": 3,\n      \"Fri\": 4,\n      \"Sat\": 5,\n      \"Sun\": 6\n    };\n    return startPos[day];\n  },\n  getDateAsString: function (date) {\n    let y = date.getFullYear(),\n        m = date.getMonth() + 1,\n        d = date.getDate(),\n        dateAsString = d + \"/\" + m + \"/\" + y;\n    return dateAsString;\n  },\n  getMonthNames: function () {\n    const months = {\n      \"January\": 0,\n      \"Feburary\": 1,\n      \"March\": 2,\n      \"April\": 3,\n      \"May\": 4,\n      \"June\": 5,\n      \"July\": 6,\n      \"August\": 7,\n      \"September\": 8,\n      \"October\": 9,\n      \"November\": 10,\n      \"December\": 11\n    };\n    return months;\n  },\n  isToday: function (someDate) {\n    const today = new Date();\n    /*eslint-disable */\n\n    return someDate.getDate() == today.getDate() && someDate.getMonth() == today.getMonth() && someDate.getFullYear() == today.getFullYear();\n    /*eslint-enable */\n  },\n  countryList: function () {\n    let countries = [\"Albania\", \"Andorra\", \"Armenia\", \"Austria\", \"Azerbaijan\", \"Belarus\", \"Belgium\", \"Bosnia and Herzegovina\", \"Bulgaria\", \"Croatia\", \"Cyprus\", \"Czechia\", \"Denmark\", \"Estonia\", \"Finland\", \"France\", \"Georgia\", \"Germany\", \"Greece\", \"Hungary\", \"Iceland\", \"Ireland\", \"Italy\", \"Kazakhstan\", \"Kosovo\", \"Latvia\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Malta\", \"Moldova\", \"Monaco\", \"Montenegro\", \"Netherlands\", \"North Macedonia\", \"Norway\", \"Poland\", \"Portugal\", \"Romania\", \"Russia\", \"San Marino\", \"Serbia\", \"Slovakia\", \"Slovenia\", \"Spain\", \"Sweden\", \"Switzerland\", \"Turkey\", \"Ukraine\", \"United Kingdom\", \"Vatican City\"];\n    return countries;\n  }\n};\nexport default utils;","map":{"version":3,"sources":["/Users/office/Documents/dbwebb-kurser/vlinux/me/kmom10/bthloggen/webbclient/src/utils/utils.js"],"names":["utils","passwordChecker","password","strength","length","match","getMonthSetup","year","month","first","Date","last","days","currentMonth","start","getDay","end","getDate","getDayPos","day","startPos","getDateAsString","date","y","getFullYear","m","getMonth","d","dateAsString","getMonthNames","months","isToday","someDate","today","countryList","countries"],"mappings":"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","sourcesContent":["const utils = {\n    passwordChecker: function(password) {\n        let strength = 0;\n\n        if (password.length >= 4 && password.length <= 6) {\n            strength += 1;\n        } else if (password.length >= 7 && password.length <= 9) {\n            strength += 2;\n        } else if (password.length >= 10) {\n            strength += 4;\n        }\n\n        if (password.match(/[A-Z]/)) {\n            strength += 3;\n        }\n\n        if (password.match(/[0-9]/)) {\n            strength += 3;\n        }\n        return strength;\n    },\n    getMonthSetup: function(year, month) {\n        let first = new Date(year, month, 1),\n            last = new Date(year, month + 1, 0);\n\n        var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n        let currentMonth = {\n            start: days[first.getDay()],\n            end: last.getDate()\n        };\n\n        return currentMonth;\n    },\n    getDayPos: function(day) {\n        let startPos = {\n            \"Mon\": 0,\n            \"Tue\": 1,\n            \"Wed\": 2,\n            \"Thu\": 3,\n            \"Fri\": 4,\n            \"Sat\": 5,\n            \"Sun\": 6\n        };\n\n        return startPos[day];\n    },\n    getDateAsString: function(date) {\n        let y = date.getFullYear(),\n            m = date.getMonth() + 1,\n            d = date.getDate(),\n            dateAsString = d + \"/\" + m + \"/\" + y;\n\n        return dateAsString;\n    },\n    getMonthNames: function() {\n        const months = {\n            \"January\": 0,\n            \"Feburary\": 1,\n            \"March\": 2,\n            \"April\": 3,\n            \"May\": 4,\n            \"June\": 5,\n            \"July\": 6,\n            \"August\": 7,\n            \"September\": 8,\n            \"October\": 9,\n            \"November\": 10,\n            \"December\": 11\n        };\n\n        return months;\n    },\n    isToday: function(someDate) {\n        const today = new Date();\n\n        /*eslint-disable */\n        return someDate.getDate() == today.getDate() &&\n            someDate.getMonth() == today.getMonth() &&\n            someDate.getFullYear() == today.getFullYear()\n        /*eslint-enable */\n    },\n    countryList: function() {\n        let countries = [\n            \"Albania\",\n            \"Andorra\",\n            \"Armenia\",\n            \"Austria\",\n            \"Azerbaijan\",\n            \"Belarus\",\n            \"Belgium\",\n            \"Bosnia and Herzegovina\",\n            \"Bulgaria\",\n            \"Croatia\",\n            \"Cyprus\",\n            \"Czechia\",\n            \"Denmark\",\n            \"Estonia\",\n            \"Finland\",\n            \"France\",\n            \"Georgia\",\n            \"Germany\",\n            \"Greece\",\n            \"Hungary\",\n            \"Iceland\",\n            \"Ireland\",\n            \"Italy\",\n            \"Kazakhstan\",\n            \"Kosovo\",\n            \"Latvia\",\n            \"Liechtenstein\",\n            \"Lithuania\",\n            \"Luxembourg\",\n            \"Malta\",\n            \"Moldova\",\n            \"Monaco\",\n            \"Montenegro\",\n            \"Netherlands\",\n            \"North Macedonia\",\n            \"Norway\",\n            \"Poland\",\n            \"Portugal\",\n            \"Romania\",\n            \"Russia\",\n            \"San Marino\",\n            \"Serbia\",\n            \"Slovakia\",\n            \"Slovenia\",\n            \"Spain\",\n            \"Sweden\",\n            \"Switzerland\",\n            \"Turkey\",\n            \"Ukraine\",\n            \"United Kingdom\",\n            \"Vatican City\"\n        ];\n\n        return countries;\n    }\n};\n\nexport default utils;\n"]},"metadata":{},"sourceType":"module"}