{"ast":null,"code":"var _jsxFileName = \"/Users/office/Documents/dbwebb-kurser/vlinux/me/kmom10/bthloggen/webbclient/src/components/page/admin/Create.js\";\n\n/*eslint max-len: [\"error\", { \"code\": 160 }]*/\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport base from '../../../config/api.js';\nlet api = base.api();\n\nclass Create extends Component {\n  constructor(props) {\n    super(props);\n    this.registerSubmit = this.registerSubmit.bind(this);\n    this.getOptions = this.getOptions.bind(this);\n    this.state = {\n      options: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getOptions();\n  }\n\n  registerSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    let token = localStorage.getItem(\"token\");\n    token = JSON.parse(token);\n    let report = {\n      \"title\": data.get('title'),\n      \"content\": data.get('content')\n    };\n    fetch(api + \"/reports\", {\n      method: 'POST',\n      body: JSON.stringify(report),\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': token\n      }\n    }).then(this.props.history.push('/reports/week/1'));\n  }\n\n  getOptions() {\n    const that = this;\n    let reports = [1, 2, 3, 4, 5, 6, 10],\n        options = [],\n        count = 0;\n    reports.forEach(function (report) {\n      fetch(api + \"/reports/week/\".concat(report)).then(res => res.json()).then(function (res) {\n        if (res.data.report.title === \"Report comming soon\") {\n          if (report >= 10) {\n            options[report] = React.createElement(\"option\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }, \"Kmom\", report);\n          } else {\n            options[report] = React.createElement(\"option\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }, \"Kmom0\", report);\n          }\n        }\n\n        if (count < reports.length) {\n          that.setState({\n            options: options\n          });\n        }\n\n        count++;\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Create Report\"), React.createElement(\"form\", {\n      action: \"/reports/week/1\",\n      method: \"post\",\n      className: \"form-register\",\n      onSubmit: this.registerSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Title\", React.createElement(\"select\", {\n      className: \"form-input\",\n      name: \"title\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.options)), React.createElement(\"label\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Content\", React.createElement(\"textarea\", {\n      className: \"form-input textarea\",\n      type: \"text\",\n      name: \"content\",\n      required: true,\n      placeholder: \"Write your report here!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"form-label check-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"check-input\",\n      type: \"checkbox\",\n      name: \"finished\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \"Are you finished?\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"button form-button center\",\n      type: \"submit\",\n      name: \"create\",\n      value: \"Create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nCreate.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\nexport default Create;","map":{"version":3,"sources":["/Users/office/Documents/dbwebb-kurser/vlinux/me/kmom10/bthloggen/webbclient/src/components/page/admin/Create.js"],"names":["React","Component","PropTypes","base","api","Create","constructor","props","registerSubmit","bind","getOptions","state","options","componentDidMount","event","preventDefault","data","FormData","target","token","localStorage","getItem","JSON","parse","report","get","fetch","method","body","stringify","headers","then","history","push","that","reports","count","forEach","res","json","title","length","setState","render","propTypes","match","object","isRequired","location"],"mappings":"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","sourcesContent":["/*eslint max-len: [\"error\", { \"code\": 160 }]*/\n\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport base from '../../../config/api.js';\nlet api = base.api();\n\nclass Create extends Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n    constructor(props) {\n        super(props);\n        this.registerSubmit = this.registerSubmit.bind(this);\n        this.getOptions = this.getOptions.bind(this);\n        this.state = {\n            options: \"\"\n        };\n    }\n    componentDidMount() {\n        this.getOptions();\n    }\n    registerSubmit(event) {\n        event.preventDefault();\n        const data = new FormData(event.target);\n\n        let token = localStorage.getItem(\"token\");\n\n        token = JSON.parse(token);\n        let report = {\n            \"title\": data.get('title'),\n            \"content\": data.get('content')\n        };\n\n        fetch(api + \"/reports\", {\n            method: 'POST',\n            body: JSON.stringify(report),\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': token\n            }\n        }).then(this.props.history.push('/reports/week/1'));\n    }\n    getOptions() {\n        const that = this;\n\n        let reports = [1, 2, 3, 4, 5, 6, 10],\n            options = [],\n            count = 0;\n\n        reports.forEach(function (report) {\n            fetch(api + `/reports/week/${report}`)\n                .then(res => res.json())\n                .then(function(res) {\n                    if (res.data.report.title === \"Report comming soon\") {\n                        if (report >= 10) {\n                            options[report] = <option>Kmom{report}</option>;\n                        } else {\n                            options[report] = <option>Kmom0{report}</option>;\n                        }\n                    }\n                    if (count < reports.length) {\n                        that.setState({\n                            options: options\n                        });\n                    }\n                    count ++;\n                });\n        });\n    }\n    render() {\n        return (\n            <div className=\"form-wrapper\">\n                <h1>Create Report</h1>\n                <form action=\"/reports/week/1\" method=\"post\" className=\"form-register\" onSubmit={this.registerSubmit}>\n                    <label className=\"form-label\">Title\n                        <select className=\"form-input\" name=\"title\" required>\n                            { this.state.options }\n                        </select>\n                    </label>\n\n                    <label className=\"form-label\">Content\n                        <textarea className=\"form-input textarea\" type=\"text\" name=\"content\" required placeholder=\"Write your report here!\"></textarea>\n                    </label>\n\n                    <label className=\"form-label check-label\">\n                        <input className=\"check-input\" type=\"checkbox\" name=\"finished\" required />\n                        Are you finished?\n                    </label><br />\n\n                    <input className=\"button form-button center\" type=\"submit\" name=\"create\" value=\"Create\" />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}